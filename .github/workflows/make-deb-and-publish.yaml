---
env:
  PACKAGE_NAME: unbound-exporter
  APT_DEPENDENCIES: ""

name: Build, package and publish
"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y ${APT_DEPENDENCIES}
        if: ${{ env.APT_DEPENDENCIES != '' }}
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Make deb package
        run: make package
        env:
          BUILD_NUMBER: ${{ github.run_number }}
      - name: Upload deb file
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4
        with:
          name: deb
          path: "*.deb"
  publish:
    name: Publish
    runs-on: ubuntu-22.04
    if: github.event_name != 'pull_request'
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
      - name: Download deb artifact
        uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4
        with:
          name: deb
      - name: Upload to Apt repo
        env:
          APT_CREDENTIALS: ${{ secrets.APT_CREDENTIALS }}
          APT_KEY_PASSPHRASE: ${{ secrets.APT_KEY_PASSPHRASE }}
        run: |
          echo $APT_CREDENTIALS > aptly-auth
          find -type f -name "*.deb" -exec curl -f --netrc-file aptly-auth -XPOST -F file=@{} https://apttoo.growse.com/api/files/${PACKAGE_NAME} \;
          export result=$(curl -f --netrc-file aptly-auth -X POST https://apttoo.growse.com/api/repos/defaultrepo/file/${PACKAGE_NAME})
          echo $result
          export failed=$(echo $result | jq '.FailedFiles | length')
          if [[ "$failed" != "0" ]]; then exit 1; fi
          curl -f --netrc-file aptly-auth -X PUT -H"Content-type: application/json" --data '{"Signing":{"Passphrase":"'"$APT_KEY_PASSPHRASE"'","Batch":true}}' https://apttoo.growse.com/api/publish/:./stablish
