name: Build, package and deploy
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Build
        run: make build
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: gopath/src/github.com/kumina/unbound_exporter/dist
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Download site artifact
        uses: actions/download-artifact@v1
        with:
          name: dist
          path: gopath/src/github.com/kumina/unbound_exporter/dist
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      - name: Install gems
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: Make deb package
        run: |
          touch gopath/src/github.com/kumina/unbound_exporter/dist/*
          make package
        env:
          BUILD_NUMBER: ${{ github.run_number }}
      - name: Upload to Apt repo
        env:
          APT_CREDENTIALS: ${{ secrets.APT_CREDENTIALS }}
          APT_KEY_PASSPHRASE: ${{ secrets.APT_KEY_PASSPHRASE }}
        run: |
          echo $APT_CREDENTIALS > aptly-auth
          find -type f -name "*.deb" -exec curl -f --netrc-file aptly-auth -XPOST -F file=@{} https://apttoo.growse.com/api/files/unbound-exporter \;
          export result=$(curl -f --netrc-file aptly-auth -X POST https://apttoo.growse.com/api/repos/defaultrepo/file/unbound-exporter)
          echo $result
          export failed=$(echo $result | jq '.FailedFiles | length')
          if [[ "$failed" != "0" ]]; then exit 1; fi
          curl -f --netrc-file aptly-auth -X PUT -H"Content-type: application/json" --data '{"Signing":{"Passphrase":"'"$APT_KEY_PASSPHRASE"'","Batch":true}}' https://apttoo.growse.com/api/publish/:./stablish          
